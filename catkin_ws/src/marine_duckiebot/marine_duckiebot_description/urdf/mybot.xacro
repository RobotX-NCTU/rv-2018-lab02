<?xml version='1.0'?>

<robot name="mybot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="cameraSize" value="0.05"/>
  <xacro:property name="cameraMass" value="0.0001"/>
  <xacro:arg name="veh" default="$(arg veh)"/>
  <xacro:include filename="$(find marine_duckiebot_description)/urdf/wheel.urdf.xacro" />
  <xacro:include filename="$(find marine_duckiebot_description)/urdf/mybot.gazebo" />
  <xacro:include filename="$(find marine_duckiebot_description)/urdf/material.xacro" />
  <xacro:include filename="$(find marine_duckiebot_description)/urdf/plugin/usv_gazebo_dynamics_plugin_duckiebot.xacro" />
  <!-- Defines the macro for simulated GPS -->
  <xacro:include filename="$(find kingfisher_gazebo)/urdf/gps_gazebo.xacro" />
  
  <!-- Defines the macro for simulated IMU -->
  <xacro:include filename="$(find kingfisher_gazebo)/urdf/imu_gazebo.xacro" />

  <!-- Macro for P3D ground truth -->
  <xacro:include filename="$(find kingfisher_gazebo)/urdf/p3d_gazebo.xacro" />
  <xacro:usv_gazebo name="duckiebot"/>
  <xacro:kingfisher_gps_gazebo name="duckiebot"/>


  <xacro:kingfisher_imu_gazebo name="duckiebot"/>


  <xacro:kingfisher_p3d_gazebo name="duckiebot"/>



    <link name="base_footprint">
        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0.0" />
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                iyy="0.0001" iyz="0.0" 
                izz="0.0001" />
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0.0 0 0.15" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>



  <link name='base_link'>
    <pose>0 0 0.0 0 0 0</pose>

    <inertial>
      <mass value="35.0"/>
      <origin xyz="0.0 0 0.0" rpy=" 0 0 0"/>
      <inertia
          ixx="0.1" ixy="0" ixz="0"
          iyy="0.1" iyz="0"
          izz="0.1"
      />
    </inertial>

    <collision name='collision'>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </collision>

    <visual name='base_link_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </visual>

    <collision name='caster_collision'>
      <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='caster_visual'>
      <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </visual>

    <!--collision name='caster_front_collision'>
      <origin xyz="0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='caster_front_visual'>
      <origin xyz="0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </visual-->


  </link>



  <link name="base">
    <collision>
      <origin xyz="0.0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.00001 0.00001 0.00001"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="-0.1 0 -0.05" rpy="0 0.0 1.57"/>
      <geometry>
        <mesh filename="package://marine_duckiebot_description/urdf/brian_base.stl" />
      </geometry>
      <!--material name="green"/-->
    </visual>
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
    </inertial>

  </link>
  <joint name="propusion_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0 0 0.0" rpy="0 0 0.0 "/>
    <parent link="base_link"/>
    <child link="base"/>
  </joint>



  <link name="weight">
    <collision>
      <origin xyz="0.0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.00001 0.00001 0.00001"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0.05 0 0.08" rpy="0 0.0 0.00"/>
      <geometry>
        <mesh filename="package://marine_duckiebot_description/urdf/duck/dduck.dae" />
      </geometry>
      <!--material name="green"/-->
    </visual>

    <inertial>
      <mass value="6.65" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
    </inertial>
  </link>
  <joint name="weight_joint" type="continuous">
    <axis xyz="0 0 0" />
    <origin xyz="-0.2 0 0.0" rpy="0 0.0 0"/>
    <parent link="base_link"/>
    <child link="weight"/>
  </joint>

    <xacro:duckiebot_wheel wheel_prefix="left">
      <origin xyz="0.15 0.15 0" rpy="0 0 0" />
    </xacro:duckiebot_wheel>

    <xacro:duckiebot_wheel wheel_prefix="right">
      <origin xyz="0.15 -0.15 0" rpy="0 0 0" />
    </xacro:duckiebot_wheel>

  <link name="camera">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
      <material name="green"/>
    </visual>

    <inertial>
      <mass value="${cameraMass}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 .8 0" />
    <origin xyz=".2 0 0.0" rpy="0 0.0 0.0"/>   <!--Duckiebot camera is 0.5-->
    <parent link="base_link"/>
    <child link="camera"/>
  </joint>


  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" hz="10" samples="440">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </VLP-16>


</robot>

