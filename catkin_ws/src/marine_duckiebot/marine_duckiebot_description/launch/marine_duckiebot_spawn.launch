<?xml version="1.0"?>
<launch>
  <!--================ Define Arguments ================-->
  <arg name="environment" default="true"/>
  <arg name="model" default="false"/>
  <arg name="yaw_type" default="yaw_rate"/>
  <arg name="duckiebot" default="false"/>
  <arg name="usv" default="false"/>

  <!--================ Set Up Gazebo Environment ================-->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <group if="$(arg environment)">
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find bamboo_lake_gazebo)/worlds/all_model.world"/>
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(arg world_name)"/>
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>
  </group>

  <!--================ Open Duckiebot ================-->
  <group if="$(eval arg('duckiebot') or arg('usv'))">
    <!--=== choose duckiebot robot ===-->
    <group if="$(arg duckiebot)">
      <arg name="urdf" default="$(find marine_duckiebot_description)/urdf/mybot.xacro"/>
      <param name="robot_description" command="$(find xacro)/xacro $(arg urdf) "/>
    </group>
    <!--=== choose usv robot ===-->
    <group if="$(arg usv)">
      <arg name="urdf" default="$(find kingfisher_gazebo)/urdf/base_gazebo.xacro"/>
      <param name="robot_description" command="$(find xacro)/xacro $(arg urdf) "/>
    </group>
    <!-- Spawn robot in gazebo -->
    <node name="spawn_duckiebot_model" pkg="gazebo_ros" type="spawn_model"
  	args="-x 0 -y 0 -z 0 -unpause -urdf -param robot_description -model duckiebot"/>
  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!--=== for road ===-->
    <include file="$(find marine_duckiebot_control)/launch/duck_control.launch"/>

    <!--=== for water ===-->
    <node pkg="kingfisher_gazebo" type="p3d2nav.py" name="p3d2nav" output="screen">
      <param name="gazebo_origin_lat" value="36.6137" type="double" />
      <param name="gazebo_origin_long" value="-121.912" type="double" />
    </node>

    <!--=== define PID controller ===-->
    <node pkg="kingfisher_control" type="pid_control.py" name="pid_control" output="screen">
      <param name="yaw_type" value="$(arg yaw_type)"/>
      <param name="yawKp" value="0.5" type="double"/>
      <param name="yawKi" value="0.0" type="double"/>
      <param name="yawKd" value="0.3" type="double"/>

      <param name="velKp" value="0.9" type="double"/>
      <param name="velKi" value="0.4" type="double"/>
      <param name="velKd" value="0.0" type="double"/>

      <param name="start_engaged" value="true" type="bool"/>
      <param name="yaw_cntrl" value="true" type="bool"/>
      <param name="vel_cntrl" value="true" type="bool"/>

      <remap from="odometry/nav" to="nav_odom" />
    </node>
    <!--=== publish global tf ===-->
    <node pkg="marine_duckiebot_navigation" type="odometry_fake.py" name="odometry_fake" output="screen"/>

    <!--=== open Apriltags detector ===-->
    <remap from="image_rect" to="/rrbot/camera1/image_raw" />
    <remap from="compressed" to="/rrbot/camera1/image_raw/compressed" />
    <remap from="camera_node/image/camera_info" to="/rrbot/camera1/camera_info" />
    <include file="$(find apriltags_ros)/launch/apriltag_detector_node.launch"></include>

</group>
	



</launch>
